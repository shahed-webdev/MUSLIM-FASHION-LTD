@using DevMaker.FileStorage
@model ProductDetailsModel
@{
    ViewData["Title"] = Model.ProductName;
    var baseUrl = FileBuilder.RootUrl;
}

@section Styles{
    <link href="~/pages-css/product-details.css" rel="stylesheet" />
}

<div id="item-details" class="container">
    <div class="card card-body my-4">
        <form id="formAdd">
            <div class="row">
                <div class="col-lg-6 col-md-5">
                    <img src="@baseUrl/@Model.ImageFileName" alt="@Model.ProductName">
                </div>
                <div class="col-lg-6 col-md-7">
                    <h2 class="font-weight-bold mb-3">@Model.ProductName</h2>
                    <p>
                        Price: <strong class="ml-2">৳@Model.Price</strong>
                        @if (Model.OldPrice > 0)
                        {
                            <small class="old-price-label ml-2">৳@Model.OldPrice</small>
                        }
                    </p>
                    <p>Brand: <strong class="ml-2">@Model.Brand</strong></p>
                    <p class="mb-4">Fabric Type: <strong class="ml-2">@Model.FabricType</strong></p>

                    <div id="sizeContainer" class="d-flex flex-wrap mb-3">
                        <span class="mr-2">Size:</span>
                        @foreach (var size in Model.ProductSizes)
                        {
                            <div class="size-radio">
                                <input class="inputSize" id="size-@size.SizeId" type="radio" data-details="@size.Description" name="ProductSize" value="@size.SizeName" required>
                                <label for="size-@size.SizeId">@size.SizeName</label>
                            </div>
                        }
                        <em id="size-description"></em>
                    </div>

                    <div class="my-3">
                        Quantity: <input name="Quantity" min="1" type="number" class="input-quantity ml-2" required value="1">
                    </div>

                    <div class="my-4">
                        <h5 class="font-weight-bold">Description</h5>
                        <p>@Model.Description</p>
                    </div>

                    <div>
                        <!---for add to local cart-->
                        <input type="hidden" name="UnitPrice" value="@Model.Price"/>
                        <input type="hidden" name="ProductName" value="@Model.ProductName"/>
                        <input type="hidden" name="ProductId" value="@Model.ProductId"/>
                        <input type="hidden" name="ImageFileName" value="@Model.ImageFileName"/>

                        <input id="btnAddToCart" class="btn btn-danger btn-md" type="submit" value="Add to Cart">
                        <input id="btnBuyNow" class="btn btn-outline-danger btn-md" type="submit" value="Buy Now">
                    </div>
                </div>
            </div>
        </form>
    </div>
</div>

@section Scripts{
    <script>
        $(function() {
            //uncheck radio button
            const inp = document.getElementsByTagName('input');
            for (let i = inp.length - 1; i >= 0; i--) {
                if (inp[i].type === 'radio')
                    inp[i].checked = false;
            }
        });

        //selectors
        const cartForm = document.getElementById("formAdd");
        const sizeContainer = document.getElementById("sizeContainer");
        const productPrice = cartForm.querySelector("#productPrice");

        const btnAddToCart = cartForm.btnAddToCart;
        const btnBuyNow = cartForm.btnBuyNow;

        // size change event
        sizeContainer.addEventListener("change",
            function(evt) {
                const element = evt.target;

                const onChange = element.classList.contains("inputSize");
                if (!onChange) return;

                const sizeDetails = document.getElementById("size-description");
                sizeDetails.textContent = element.getAttribute("data-details");
            });

        //add to cart
        cartForm.addEventListener("submit",
            function(evt) {
                evt.preventDefault();

                const obj = methods.getForm(this);
                shoppingCart.addItemToCart(obj);

                //displayCart();

                if (document.activeElement.id === "btnBuyNow") {
                    location.href = "/Product/Checkout";
                    return;
                }

                $.notify("Product added to Shopping Cart", "success", { position: "right" });
            });
    </script>
}