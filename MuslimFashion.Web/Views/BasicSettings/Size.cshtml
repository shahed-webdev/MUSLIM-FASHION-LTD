@model IEnumerable<SizeCrudModel>
@{
    ViewData["Title"] = "Size";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="container">
    <h4 class="page-header mb-3">Size</h4>

    <div class="card card-body">
        <form id="formAdd">
            <div class="row">
                <div class="col-lg-3">
                    <div class="form-group">
                        <label>Size Name</label>
                        <input name="SizeName" type="text" class="form-control" required>
                    </div>
                </div>
                <div class="col-lg-6">
                    <div class="form-group">
                        <label>Description</label>
                        <input name="Description" type="text" class="form-control" required>
                    </div>
                </div>
                <div class="col-3">
                    <div class="form-group pt-4">
                        <input name="btnSubmit" type="submit" value="Submit" class="btn btn-danger btn-md btn-rounded" />
                    </div>
                </div>
            </div>
        </form>

        <ul id="menu-list" class="list-group list-group-flush">
            @foreach (var item in Model)
            {
                <li class="list-group-item d-flex justify-content-between align-items-center">
                    <div>
                        <strong class="d-block">@item.SizeName</strong>
                        <span>@item.Description</span>
                    </div>
                    <div>
                        <i id="@item.SizeId" data-value="@item.SizeName" data-code="@item.Description" class="update far fa-edit mr-3"></i>
                        <i id="@item.SizeId" class="delete far fa-trash-alt"></i>
                    </div>
                </li>
            }
        </ul>
    </div>
</div>


<!-- Modal -->
<div class="modal fade" id="updateModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel"
     aria-hidden="true">
    <div class="modal-dialog modal-notify modal-danger" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <p class="heading lead">Update</p>

                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true" class="white-text">&times;</span>
                </button>
            </div>

            <!--Body-->
            <div class="modal-body">
                <form id="formUpdate">
                    <input type="hidden" name="SizeId" />
                    <div class="form-group">
                        <label>Size Name</label>
                        <input name="SizeName" type="text" class="form-control" required>
                    </div>
                    <div class="form-group">
                        <label>Description</label>
                        <input name="Description" type="text" class="form-control" required>
                    </div>
                    <input name="btnSubmit" type="submit" value="update" class="btn btn-danger" />
                </form>
            </div>
        </div>
    </div>
</div>


@section Scripts{
    <script>
        (function() {
            //add
            const formAdd = document.getElementById("formAdd");
            const formUpdate = document.getElementById("formUpdate");
            formAdd.addEventListener("submit",
                function(evt) {
                    evt.preventDefault();
                    this.btnSubmit.disabled = true;

                    $.ajax({
                        url: "/BasicSettings/PostSize",
                        type: "POST",
                        data: methods.getForm(this),
                        success: response => {
                            $.notify(response.Message, response.IsSuccess ? "success" : "error");

                            if (response.IsSuccess) {
                                location.reload();
                            }

                            this.btnSubmit.disabled = false;
                        },
                        error: error => {
                            this.btnSubmit.disabled = false;
                            console.log(error);
                        }
                    });
                });

            //edit/delete
            const dataList = document.getElementById("menu-list");
            dataList.addEventListener("click",
                function(evt) {
                    const element = evt.target;
                    const onUpdate = element.classList.contains("update");
                    const onDelete = element.classList.contains("delete");

                    //update
                    if (onUpdate) {
                        formUpdate.SizeId.value = element.id;
                        formUpdate.SizeName.value = element.getAttribute("data-value");
                        formUpdate.Description.value = element.getAttribute("data-code");

                        $("#updateModal").modal("show");
                    }

                    //delete
                    if (onDelete) {
                        $.ajax({
                            url: "/BasicSettings/DeleteSize",
                            type: "POST",
                            data: { id: element.id },
                            success: response => {
                                $.notify(response.Message, response.IsSuccess ? "success" : "error");

                                if (response.IsSuccess) {
                                    location.reload();
                                }
                            },
                            error: error => {
                                console.log(error);
                            }
                        });
                    }
                });

            //post update
            formUpdate.addEventListener("submit",
                function(evt) {
                    evt.preventDefault();
                    this.btnSubmit.disabled = true;

                    $.ajax({
                        url: "/BasicSettings/UpdateSize",
                        type: "POST",
                        data: methods.getForm(this),
                        success: response => {
                            $.notify(response.Message, response.IsSuccess ? "success" : "error");

                            if (response.IsSuccess) {
                                location.reload();
                            }

                            this.btnSubmit.disabled = false;
                        },
                        error: error => {
                            this.btnSubmit.disabled = false;
                            console.log(error);
                        }
                    });
                });

        })();
    </script>
}
